package com.spring.dto;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;

import com.spring.model.Board;
import com.spring.model.Comment;
import com.spring.model.User;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class BoardDTO {

	@Id
	private Long board_no;

	@Column(length = 255)
	private String board_title;

	@Column(length = 255)
	private String board_content;

	@CreatedDate
	private LocalDateTime registered_date;

	@LastModifiedDate
	private LocalDateTime modified_date;

	@ManyToOne
	@JoinColumn(name = "user_email")
	private User user;

	@OneToMany(mappedBy = "board", fetch = FetchType.LAZY)
	List<Comment> comments = new ArrayList<Comment>();
	
	
	
	// toEntity
	public Board toEntity(BoardDTO boardDTO) {
		Board boardEntity = Board.builder().board_no(boardDTO.getBoard_no())
											.board_title(boardDTO.getBoard_title())
											.board_content(boardDTO.getBoard_content())
											.registered_date(boardDTO.getRegistered_date())
											.modified_date(boardDTO.getModified_date())
											.build();
		
		return boardEntity;
	}

}
